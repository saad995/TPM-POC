import { faBars } from "@fortawesome/free-solid-svg-icons";
import { FormButton, FormCheckbox, FormComboBox, FormDatePicker, FormDropDown, FormGroupCheckbox, FormInput, FormMultiSelect, FormRadioGroup } from "Elements/Basic/FormComponent/FormComponent";
import { FieldControlTypes } from "Elements/Custom/FormGenerator/FormGeneratorInterface";
import { accreditationNoValidator, addressValidator, cellNumberValidator, comboBoxValidator, dateValidator, emailValidator, phoneNumberValidator, textInputValidator } from "../Utility";
import { TreatmentPurpose } from "./AmendmentTreatmentTypeInterfaces";
import { TreatmentTypeLicenseGridColumns } from "../Grid/GridColumnSize";



export const FormTreatmentLIcenseGridConfig:any = {
    treatmentOperatorName: {
        name: "treatmentOperatorName",
        type: "text",
        placeholder: "Please input Treatment Operator Name",
        label: "Treatment Operator Name",
        value: "",
        disabled: false,
        labelClass: "font-bolder",
        validationMessage: "",
        component: FormInput,
        controlType: FieldControlTypes.TEXT,
        textField: "label",
        dataItemKey: "value",
        data: []
    },
    treatmentOperatorLicense: {
        name: "treatmentOperatorLicense",
        type: "text",
        placeholder: "Please input Treatment Operator License Number",
        label: "Treatment Operator License Number *",
        value: "",
        disabled: false,
        labelClass: "font-bolder",
        validationMessage: "",
        component: FormInput,
        textField: "label",
        dataItemKey: "value",
        data: [],
        optional: false,
        validator: addressValidator,
        controlType: FieldControlTypes.TEXT
    },
    addButton: {
        name: "button",
        type: "button", //e.g submit, button, ""
        placeholder: "Input ISPM Mark",
        label: "Add",
        value: "",
        disabled: false,
        labelClass: "font-bolder",
        validationMessage: "",
        component: FormButton,
        controlType: FieldControlTypes.BUTTON,
        //handleBtnDisbale: '',
        buttonText: 'Add',
        isIconShow: true,
        icon: faBars,
        textField: "label",
        dataItemKey: "value",
        onclick: null,
        isClearForm: true,
        data: [],
        optional: false
    },
};

export const AmendmentFormConfig = {
    treatmentSubTypes: {
        name: "treatmentSubTypes",
        type: "text",
        placeholder: "Select Fumigation Allowed *",
        label: "Select Fumigation Allowed *",
        value: [],
        disabled: false,
        labelClass: "font-bolder",
        validationMessage: "",
        component: FormGroupCheckbox,
        controlType: FieldControlTypes.GROUPCHECKBOX,
        onclick: null,
        textField: "name",
        dataItemKey: "id",
        optional: false,
        required: true,
        data: [
            {
                id: 1,
                label: 'Methyle Bromide (MB)',
                disabled: false,
                checked: true,
                documentTypeCode:"T13"
            },
            {
                id: 2,
                label: 'Aluminium Phosphite (ALP)',
                disabled: false,
                checked: false,
                documentTypeCode:"T14"
            },
            {
                id: 3,
                label: 'Carbon Dioxide (CO2)',
                disabled: false,
                checked: false,
                documentTypeCode:"T15"
            }
        ],
        validator: comboBoxValidator,
        isAmendmentAllowed: false,
        isRenewalAllowed: false

    },
    ispmMark: {
        name: "ispmMark",
        type: "text",
        placeholder: "Input ISPM Mark",
        label: "ISPM Mark *",
        value: "",
        disabled: false,
        labelClass: "font-bolder",
        validationMessage: "",
        component: FormInput,
        textField: "label",
        dataItemKey: "value",
        optional: false,
        data: [],
        validator: textInputValidator,
        controlType: FieldControlTypes.TEXT,
        isAmendmentAllowed: false,
        isRenewalAllowed: false
    },
    productionUnitCode: {
        name: "productionUnitCode",
        type: "text",
        placeholder: "Please input product unit code",
        label: "DPP/Production Unit Code *",
        value: "",
        disabled: false,
        labelClass: "font-bolder",
        validationMessage: "",
        component: FormInput,
        textField: "label",
        dataItemKey: "value",
        data: [],
        optional: false,
        controlType: FieldControlTypes.TEXT,
        validator: textInputValidator,
        isAmendmentAllowed: false,
        isRenewalAllowed: false,
        maxLength:500
    },
    ntn: {
        name: "ntn",
        type: "text",
        placeholder: "Please select ntn",
        label: "NTN *",
        value: "",
        disabled: true,
        labelClass: "font-bolder",
        validationMessage: "",
        component: FormComboBox,
        controlType: FieldControlTypes.COMBOBOX,
        textField: "label",
        dataItemKey: "value",
        data: [],
        optional: false,
        validator: comboBoxValidator,
        maxLength:7
    },
    companyName: {
        name: "companyName",
        type: "text",
        placeholder: "Please select name of firm",
        label: "Name of Firm *",
        value: "",
        disabled: true,
        labelClass: "font-bolder",
        validationMessage: "",
        component: FormComboBox,
        controlType: FieldControlTypes.COMBOBOX,
        textField: "label",
        dataItemKey: "value",
        data: [],
        optional: false,
        validator: comboBoxValidator,
        isAmendmentAllowed: false,
        isRenewalAllowed: false,
        maxLength:100
    },
    businessName: {
        name: "businessName",
        type: "text",
        placeholder: "Please select owner name",
        label: "Owner",
        value: "",
        disabled: true,
        labelClass: "font-bolder",
        validationMessage: "",
        component: FormComboBox,
        controlType: FieldControlTypes.COMBOBOX,
        textField: "label",
        dataItemKey: "value",
        data: [],
        optional: false,
        validator: comboBoxValidator,
        isAmendmentAllowed: false,
        isRenewalAllowed: false,
        maxLength:100
    },
    phoneNumber: {
        name: "phoneNumber",
        type: "text",
        placeholder: "Please input phone number",
        label: "Phone Number",
        value: "",
        disabled: false,
        labelClass: "font-bolder",
        validationMessage: "",
        component: FormInput,
        textField: "label",
        dataItemKey: "value",
        data: [],
        controlType: FieldControlTypes.TEXT,
        optional: true,
       validator: phoneNumberValidator,
        isAmendmentAllowed: false,
        isRenewalAllowed: false,
        maxLength:15
    },
    cellNumber: {
        name: "cellNumber",
        type: "text",
        placeholder: "Please input cell number",
        label: "Cell Number *",
        value: "",
        disabled: false,
        labelClass: "font-bolder",
        validationMessage: "",
        component: FormInput,
        textField: "label",
        dataItemKey: "value",
        data: [],
        optional: false,
        validator: cellNumberValidator,
        controlType: FieldControlTypes.TEXT,
        isAmendmentAllowed: false,
        isRenewalAllowed: false,
        maxLength:15
    },
    emailAddress: {
        name: "emailAddress",
        type: "text",
        placeholder: "Please input email address",
        label: "Email Address *",
        value: "",
        disabled: false,
        labelClass: "font-bolder",
        validationMessage: "",
        component: FormInput,
        textField: "label",
        dataItemKey: "value",
        data: [],
        controlType: FieldControlTypes.TEXT,
        optional: false,
        validator: emailValidator,
        isAmendmentAllowed: false,
        isRenewalAllowed: false,
        maxLength:100
    },
    plantAddress: {
        name: "plantAddress",
        type: "text",
        placeholder: "Please input plant address",
        label: "Plant Address *",
        value: "",
        disabled: false,
        labelClass: "font-bolder",
        validationMessage: "",
        component: FormInput,
        textField: "label",
        dataItemKey: "value",
        data: [],
        controlType: FieldControlTypes.TEXT,
        optional: false,
        validator: addressValidator,
        maxLength:500
    },
    officeAddress: {
        name: "officeAddress",
        type: "text",
        placeholder: "Please select office address",
        label: "Office Address *",
        value: "",
        disabled: false,
        labelClass: "font-bolder",
        validationMessage: "",
        component: FormInput,
        textField: "label",
        dataItemKey: "value",
        data: [],
        controlType: FieldControlTypes.TEXT,
        optional: false,
        validator: addressValidator,
        isAmendmentAllowed: false,
        isRenewalAllowed: false,
        maxLength:500
    },
    plantCapacity: {
        name: "plantCapacity",
        type: "text",
        placeholder: "Please input plant capacity",
        label: "Plant Capacity",
        value: "",
        disabled: false,
        labelClass: "font-bolder",
        validationMessage: "",
        component: FormInput,
        textField: "label",
        dataItemKey: "value",
        data: [],
        controlType: FieldControlTypes.TEXT,
        optional: true,
        isAmendmentAllowed: false,
        isRenewalAllowed: false,
        maxLength:9
    },
    city: {
        name: "city",
        type: "text",
        placeholder: "Please select city",
        label: "City *",
        value: "",
        disabled: false,
        labelClass: "font-bolder",
        validationMessage: "",
        component: FormComboBox,
        controlType: FieldControlTypes.COMBOBOX,
        textField: "label",
        dataItemKey: "value",
        data: [],
        optional: false,
        validator: comboBoxValidator,
        isAmendmentAllowed: false,
        isRenewalAllowed: false,
        onchange: null,
        onclick: null,
        onblur: null,
        onload: null,
        onfocus: null,
        autoFocus: true
    },
    packHouse: {
        name: "packHouse",
        type: "text",
        placeholder: "Please select pack house",
        label: "Pack House",
        value: true,//{label: 'Yes', value: true},
        disabled: false,
       // labelClass: "font-bolder",
        labelClass: "pb-2",
        validationMessage: "",
        component: FormRadioGroup,
        layout: 'horizontal',
        textField: "label",
        dataItemKey: "value",
        data: [{label: 'Yes', value: true},{label: 'No', value: false}],
        controlType: FieldControlTypes.RADIOGROUP,
        optional: true,
        isAmendmentAllowed: false,
        isRenewalAllowed: false
    },
    validUpto: {
        name: "validUpto",
        type: "date",
        placeholder: "Please select date",
        label: "Valid Up to *",
        value: new Date(),
        disabled: false,
        labelClass: "font-bolder",
        validationMessage: "",
        component: FormDatePicker,
        controlType: FieldControlTypes.DATE,
        textField: "label",
        dataItemKey: "value",
        data: [],
        min: new Date(),
       // defaultValue: new Date(),
        format: "dd-MM-yyyy",
        optional: false,
        validator: dateValidator,
        isAmendmentAllowed: false,
        isRenewalAllowed: false
    },
    treatmentOperatorInfo: {
        name: "treatmentOperatorInfo",
        type: "grid",
        placeholder: "",
        label: "",
        value: new Date(),
        disabled: false,
        labelClass: "font-bolder",
        validationMessage: "",
        component: null,
        controlType: FieldControlTypes.GRID,
        textField: "label",
        dataItemKey: "value",
        data: [],
        optional: false,
        //validator: dateValidator,
        isAmendmentAllowed: false,
        isRenewalAllowed: false,
        formFields: FormTreatmentLIcenseGridConfig,
        columns: TreatmentTypeLicenseGridColumns

    },
    accreditationNo: { 
        name: "accreditationNo",
        type: "text",
        placeholder: "DPP/[Treatment Abbreviation]/000",
        label: "PAFAS Accreditation No. *",
        value: "",
        disabled: true,
        labelClass: "font-bolder",
        validationMessage: "",
        component: FormInput,
        textField: "label",
        dataItemKey: "value",
        optional: false,
        data: [],
        validator: accreditationNoValidator,
        controlType: FieldControlTypes.MASKED,
        isAmendmentAllowed: false,
        isRenewalAllowed: false,
        maxLength:11,
    },
    purpose:{
        action:TreatmentPurpose.AMENDMENT,
        buttonText:"Amend",
        controlType:-1,
    }
};

